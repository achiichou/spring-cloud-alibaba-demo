spring:
  application:
    name: seata-business
  datasource:
    url: jdbc:mysql://localhost:3306/storage_db?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  # Redis配置 - 用於分布式鎖
  data:
    redis:
      host: localhost
      port: 6379
      password: # Redis密碼，如果沒有密碼可以留空
      database: 0
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 5
          max-wait: 3000ms
  cloud:
    nacos:
      server-addr: 127.0.0.1:8848
      config:
        import-check:
          enabled: false
server:
  port: 11000

# ==========================================
# 分布式鎖配置 - 跨服務分布式鎖系統設定
# ==========================================
distributed:
  lock:
    # Redis連接配置 - 用於分布式鎖存儲
    redis:
      host: localhost                    # Redis服務器地址
      port: 6379                        # Redis服務器端口
      password:                         # Redis密碼，如果沒有密碼可以留空
      database: 0                       # Redis數據庫編號，建議使用專用數據庫
      timeout: 3000                     # 連接超時時間（毫秒）
      connection-pool-size: 10          # 連接池大小
      connection-minimum-idle-size: 5   # 連接池最小空閒連接數
      
    # 鎖行為配置 - 控制鎖的獲取和持有行為
    lock:
      default-wait-time: 5              # 默認等待鎖時間（秒），超時後根據失敗策略處理
      default-lease-time: 30            # 默認鎖持有時間（秒），超時後自動釋放防止死鎖
      key-prefix: "distributed:lock:storage:"  # 鎖鍵前綴，確保與seata-storage服務一致
      enable-monitoring: true           # 啟用鎖監控和統計功能
      cross-service-lock: true          # 跨服務鎖標識，啟用跨服務協調
      service-identifier: "seata-business"     # 服務標識符，用於鎖持有者識別
      
    # 錯誤處理和重試配置 - 提高系統韌性
    max-retry-attempts: 3               # 鎖獲取失敗時的最大重試次數
    retry-base-delay: 100               # 重試基礎延遲時間（毫秒），實際延遲使用指數退避
    enable-degradation: true            # 啟用降級模式，Redis不可用時使用本地鎖
    circuit-breaker-threshold: 5        # 熔斷器閾值，連續失敗次數達到此值時開啟熔斷器
    
    # Seata事務集成配置 - 與分散式事務生命週期同步
    seata:
      auto-release: true                # 事務結束時自動釋放鎖
      release-timeout: 5000             # 鎖釋放超時時間（毫秒）
      
    # 跨服務協調配置 - 處理服務間鎖衝突
    enable-conflict-detection: true     # 啟用跨服務鎖衝突檢測和記錄

# Spring Boot Actuator配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
    metrics:
      enabled: true
  metrics:
    tags:
      application: seata-business
      service: distributed-lock
  prometheus:
    metrics:
      export:
        enabled: true

